old BlogEditor code :-
-----------------------

import React, { useState} from 'react';
import { Editor } from 'react-draft-wysiwyg'; 
import { EditorState, convertToRaw } from 'draft-js';
import draftToHtml from 'draftjs-to-html';

export const BlogEditor = () => {
   const [editorState, setEditorState] = useState(EditorState.createEmpty());
   const handleEditorChange = (state) => {
     setEditorState(state);
     const contentState = state.getCurrentContent();
    onChange(draftToHtml(convertToRaw(contentState)));
   };

  return (
    <div>
      <Editor
        editorState={editorState}
        wrapperClassName="demo-wrapper"
        editorClassName="demo-editor"
        onEditorStateChange={handleEditorChange}
      /> 
    </div>
  );
};


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
=======================================================================================================================
 
 old new post code :-
----------------------
import React, { useEffect, useState } from "react";
import { BlogEditor } from "../components/BlogEditor";
import "../assets/newPost.css";
import { useNavigate } from "react-router-dom";

export const NewPost = () => {
  const [title, setTitle] = useState("");
  const [newPostContent, setNewPostContent] = useState("");
  const [category, setCategory] = useState("");
const navigate = useNavigate()
 useEffect(() => {
     const editPostData = JSON.parse(localStorage.getItem("filterPost"));
    if(editPostData) {editPostData.map((el) => {
     setTitle(el.title);
       setCategory(el.category);
       setNewPostContent(el.newPostContent);
       localStorage.removeItem("filterPost");
      return null; 
   });}
 }, []);


  const handleSubmit = (e) => {
     e.preventDefault();

     const blogPost = {
       title,
       category,
       newPostContent,
     };

    const exsistingData = JSON.parse(localStorage.getItem("blogPost")) || [];
     const updatedData = [...exsistingData, blogPost];
     localStorage.setItem("blogPost", JSON.stringify(updatedData));

    setTitle("");
    setCategory("");
   setNewPostContent("");
  navigate('/')
   };
  return (
    <div className="newPost-container">
      <form className="newPost-form" onSubmit={handleSubmit}>
        <div className="NP-in-div">
          <div className="newPost-title">
            <label className="newPost-titleLabel">Title:</label>
            <input
              className="newPost-title-input"
              type="text"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
            />
          </div>
          <div className="newPost-title">
            <label className="newPost-titleLabel">Category:</label>
            <input
              className="newPost-category-input"
              type="text"
              value={category}
              onChange={(e) => setCategory(e.target.value)}
            />
          </div>

          <div className="NP-content">
            <BlogEditor
              setNewPostContent={setNewPostContent}
              newPostContent={newPostContent}
            />
          </div>
          <div className="NP-form-btn">
            <button className="NP-subm-btn" type="submit">
              SUBMIT
            </button>
          </div>
        </div>
      </form>
    </div>
  );
};


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
=======================================================================================================================

old Home code :-
-----------------
  import React, {useEffect, useState } from "react";
  import "../assets/home.css";
  import { useNavigate } from "react-router-dom";

  export const Home = () => {
    const exsistingData =JSON.parse (localStorage.getItem("blogPost")) || [];
    const [blogPost, setBlogPost] = useState(exsistingData);
  const navigate= useNavigate()
    const handelPostDelete = (index) => {
      const deletedPost = blogPost.splice(index, 1)[0];
       The splice() method adds or removes array elements.
       index is used for index number
       1 is used as permeter so that it only delete one item from blogpost array
       [0]:is used to access the deleted item from array
      setBlogPost([...blogPost]);
       updating state
      localStorage.setItem("blogPost", JSON.stringify(blogPost));
       setting updated data in localStorage
      const trashPosts = JSON.parse(localStorage.getItem("trashBin")) || [];
       getting deleted data from local storage
      trashPosts.push(deletedPost);
       adding deleted post into trashbin array with push
      localStorage.setItem("trashBin", JSON.stringify(trashPosts));
       Store updated trashBin array in localStorage
    };
                     
    const handlePostEdit = (itemindex) => {
   const getEditPost=JSON.parse(localStorage.getItem('blogPost')) || []
  navigate("/newpost")
   const filterPost=getEditPost.filter((_,index)=> index=== itemindex)
   setBlogPost(filterPost)
   localStorage.setItem('filterPost', JSON.stringify(filterPost))
    };

    
    return (
      <div className="homeContainer">
        <div className="blog-grid">
          {exsistingData.map((item, index) => (
            <div key={index} className="blog-card">
              <h2>{item.title}</h2>
              <h5>{item.category}</h5>
              <div
                dangerouslySetInnerHTML={{ __html: item.newPostContent }}
              ></div>
              {/* dangerouslySetInnerHTML this is used to get submitted editor data in react in html form  */}
              <div className="post-dele-edi-btn">
                <div>
                  <button
                    className="post-dele-btn"
                    onClick={() => handelPostDelete(index)}
                  >
                    DELETE
                  </button>
                </div>
                <div>
                  <button className="post-edit-btn" onClick={()=>handlePostEdit(index )}>
                    EDIT
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    );
  };
